<html><body>
<h1>PEOPLE APP - URGENT:</h1>
1. table referrals must be no holding referrals.:
<h4>DONE</h4> - 2. update the lastChangeDate field in the API class;
3. record the IP from which the registration has been done; 
3. do registration process with stored procedures;
4. Registration form - record GET parameters ref & system (s) in database;
5. for loginbyhash - we have to record also the IP from which the session comes and not login people from different ip with the same hash.
6. start the registration ID from 1804327 

<h1>PEOPLE APP / CB B2C - bank user roles in people api.</h1>
1. change in Permissions model in People system;
2. change people system software;
3. change Database;

<h1>CADIA BANK B2C</h1>
1. sessions should last &lt; 30 min.

<h1>PEOPLE APP / CH B2C:</h1>
1. if distributor is moved to investor messages to distributors are also sent to him

<h1>CADIA BANK CORE API:</h1>
1. write ruby server-side script to monitory daily if a maintenance charge must be applied. - check from cbcore_users table when the default_maintenance_charge_from was written and apply the business logic for quarterly maintenance charge; 

<h1>CADIA HOLDING B2C:</h1>
1. all forms should be processed first before result so that reload won't affect them.

<h1>CADIA INSURANCE B2C:</h1>
1. картинки на продуктите; 
2. портфолио от продукти - дневник на продукта, воден от клиента; комуникация с продуктовия мениджър.
3. for the future - do we need to have at product creation time a second form for 'Get a quote', which will be displayed on the web site for each product individually;
4. sessions should last only 30 min. - do it like on b2c holding.


1. salt md5 passwords;
2. api auth hashes must be taken from DB tables and there must be a weekly ruby script to regenerate them in all databases.
3. check referrer on all systems; if strpos($_SERVER['HTTP_REFERER'], 'https://DiD/') !== 0 -> destroy sessions.
4. check first three numbers from IP;
5. change the DB passwords from SVN versions.

<h1>PEOPLE APP - NON URGENT:</h1>
1. Improve the login by hash - do it with exceptions for slow internet connections; if after some time there's no result, redirect to login form.
2. ???-какво е това - трябва да се напарви тест. add new distributor with REF_id and see why it records the newly assigned user_id as a refererre table if nikola@maniyka.com supplied.

<h1>SECURITY:</h1>
1. write stress test with CURL commands on the API, etc. and measure. 
2. write ruby server-side cripts to monitor the consistency of Databases; to monitor logs. and send emails with reports daily or on events.
        - monitor that no commission is larger than the corresponding investment deal value.
	-
</body>
</html>
